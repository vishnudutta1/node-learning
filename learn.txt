with the help of http we can create server
for this we import http and use method http.createServer(function).listen(4500)
createServer takes function as an argument.
in the function it takes two argument one is request and another is response
refer basic.js


--> node.js is single threaded that is it runs single command at a time.

---> use of a colors npm package see index.js

--> we can get npm module by simply running npm install

--> if we dont want to push any file ...we give that file path in .gitignore

--> nodemon package is a time saving module...with this package we dont have to run our server everytime....it runs our project continuosly

--> node js is async language thats why it is fast in execution

To Export any file's data like variable,function and object we write module.export 

--> for example : module.export={
    x:10,
    z:function(){
        return 10
    }
}

-->To import that file's data we simply write require with file name

As for example : const app = require('./app')

                console.log(app.z)



---> Question : Difference between global and non global module :

---> Answer the module which we dont need to import is known as global example :console.log()
 while the module which we need to import is known as non global module example : const fs = require('/fs')

---> To create a file in project

we write ---> fs.writeFileSync('file name',"content")
Example :   fs.writefileSync('hello.js',"console.log("vishnu)")

Another method : const fs = require('fs').writeFileSync;
                    fs = ("hello.js","console.log("vishnu)")
 

---> To check the directoy of file :

console.log(__dirname)


----> To make server 

step 1 --> we import http module:

const http = require('http')

http module basically handle the request and response of the server.


--->Question : Why use nodemon?
Answer: Nodemon is used to run the project continuosly of node js.


--> node js is a async language.Due to whic it is fast

                                    ----------->     making of an static api     <-------------------


--> To create server we import http 
--> then we use http.createServer to send request and response

---> if we have to send data through api we use response and request is used to receive data or to rceive response

example : http.createServer((req,resp)=>{
    resp.writeHead(200,{'content-Type':'application\json'});
    resp.write(JSON.stringify(data)) 

//--> writeHead is used to define the head of api or information about api like status code and content type .It takes two parameter
//-->//json.stringify will convert all the data into json
// listen is used to run the code at the given port
}).listen(5000)


code   status

 200        ok / successful
 201        Created
 400        bad request
 201        Created



                                Express js

It is a node js framework. 






 

 

